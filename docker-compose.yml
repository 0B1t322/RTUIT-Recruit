version: "3.8"
services:
  db:
    image: mysql
    container_name: db
    restart: always
    ports: 
    - 3306:3306
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_USER: docker
      MYSQL_PASSWORD: docker
    volumes:
      - "./db/scripts/recruit.sql:/docker-entrypoint-initdb.d/1.sql"
      - "wp-db:/var/lib/mysql:rw"
    networks: 
      - database
  service.purchases:
    image: 0b1t322/service.purchases
    container_name: service.purchases
    command: 
      "./main"
    expose: 
      - 8081
    depends_on: 
      - db
    networks: 
      - database
      - proxy
  service.shops:
    image: 0b1t322/service.shops
    container_name: service.shops
    command: 
      "./main"
    expose: 
      - 8082
    depends_on: 
      - db
      - service.purchases
    networks: 
      - database
      - proxy
  service.factory:
    image: 0b1t322/service.factory
    container_name: service.factory
    command: 
      "./main"
    depends_on: 
      - service.shops
      - db
    networks: 
    - database
    - proxy
    volumes: 
      - ./config.json:/go/src/app/config.json
  swagger-ui:
    image: swaggerapi/swagger-ui
    container_name: swagger-ui
    ports:
      - "8001:8080"
    volumes:
      - ./docs:/usr/share/nginx/html/swagger
    environment:
      API_URL: swagger/swagger.yaml
    networks: 
      - proxy
  nginx:
    image: nginx
    container_name: nginx
    volumes:
    - ./reverse_proxy.conf:/etc/nginx/conf.d/default.conf
    ports:
    - 8084:8084
    networks: 
      - proxy
    depends_on: 
    -  service.shops
    -  service.purchases
    -  swagger-ui
    links: 
    -  service.shops
    -  service.purchases
    -  swagger-ui

networks: 
  database:
    driver: "bridge"
  proxy:
    driver: "bridge"

volumes: 
  wp-db: {}